---
title: "Assignment 2"
---

# Assignment 2

## 1)

The data of the films originating from T??rkiye that received more than 2500 votes were scripted on IMDB's page.

```{r, message=FALSE, results='asis'}

library(tidyverse)
library(rvest)
library(stringr)
library(ggplot2)
library(knitr)
library(reshape2)
library(dplyr)

batch_1 <- "https://www.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,2023-12-31&num_votes=2500,&country_of_origin=TR&count=250"
batch_2 <- "https://www.imdb.com/search/title/?title_type=feature&release_date=,2009-12-31&num_votes=2500,&country_of_origin=TR&count=250"
url_vector <- c(batch_1,batch_2)

```

## 3)

```{r, message=FALSE, results='asis'}
movies_df <- movies_df[order(movies_df$movie_ratings, decreasing = TRUE),]
```


## 2)

Created a Data Frame from raw data containing Columns: Title, Year, Duration, Rating, Votes

```{r}

extract_duration <- function(duration_trash) {
  duration <- numeric(length(duration_trash))

  for (string in duration_trash) {
    if (grepl("m", string, fixed = TRUE)) {
      result <- str_extract(string, "\\d+")
      duration <- append(duration, as.numeric(result))
    } else if (grepl("h", string, fixed = TRUE)) {
      result <- str_extract(string, "\\d+")
      duration <- append(duration, as.numeric(result) * 60)
    }
  }

  return(duration)
}


movies_df <- data.frame(
  movie_titles = character(),
  movie_years = numeric(),
  movie_durations = numeric(),
  movie_ratings = numeric(),
  movie_votes = numeric()
)

for (url in url_vector) {
  HTML <- read_html(url)

  title_names <- HTML %>% html_nodes('.ipc-title__text') %>% html_text() %>% str_split(" ", n = 2) %>% lapply(function(x) x[2]) %>% unlist()

  year <- HTML %>% html_nodes(".sc-43986a27-7.dBkaPT.dli-title-metadata") %>% html_text() %>% substr(1, 4) %>% as.numeric()

  duration_trash <- HTML %>% html_nodes(".sc-43986a27-7.dBkaPT.dli-title-metadata") %>% html_text()
  duration <- extract_duration(duration_trash)

  rating <- HTML %>% html_nodes(".ipc-rating-star.ipc-rating-star--base.ipc-rating-star--imdb.ratingGroup--imdb-rating") %>% html_text() %>% substr(1, 3) %>% as.numeric()

  vote <- HTML %>% html_nodes(".sc-53c98e73-0.kRnqtn") %>% html_text() %>% sub("Votes", "") %>% gsub(",", "", .) %>% as.numeric()

  movies_df <- movies_df %>% add_row(
    movie_titles = title_names,
    movie_years = year,
    movie_durations = sum(duration),
    movie_ratings = rating,
    movie_votes = vote
  )
}

kable(head(movies_df, 10), caption = "Movies Dataframe")

```

## 3)

